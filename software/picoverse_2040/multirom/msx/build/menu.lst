                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.0 #11195 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module menu
                              6 	.optsdcc -mz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _printf
                             13 	.globl _WaitKey
                             14 	.globl _Screen
                             15 	.globl _Cls
                             16 	.globl _Locate
                             17 	.globl _PrintChar
                             18 	.globl _totalFiles
                             19 	.globl _currentIndex
                             20 	.globl _totalPages
                             21 	.globl _currentPage
                             22 	.globl _size
                             23 	.globl _offset
                             24 	.globl _mapp
                             25 	.globl _game
                             26 	.globl _putchar
                             27 	.globl _mapper_description
                             28 	.globl _displayMenu
                             29 	.globl _helpMenu
                             30 	.globl _navigateMenu
                             31 ;--------------------------------------------------------
                             32 ; special function registers
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; ram data
                             36 ;--------------------------------------------------------
                             37 	.area _DATA
   0000                      38 _game::
   0000                      39 	.ds 512
   0200                      40 _mapp::
   0200                      41 	.ds 512
   0400                      42 _offset::
   0400                      43 	.ds 1024
   0800                      44 _size::
   0800                      45 	.ds 1024
   0C00                      46 _currentPage::
   0C00                      47 	.ds 2
   0C02                      48 _totalPages::
   0C02                      49 	.ds 2
   0C04                      50 _currentIndex::
   0C04                      51 	.ds 2
   0C06                      52 _totalFiles::
   0C06                      53 	.ds 2
                             54 ;--------------------------------------------------------
                             55 ; ram data
                             56 ;--------------------------------------------------------
                             57 	.area _INITIALIZED
                             58 ;--------------------------------------------------------
                             59 ; absolute external ram data
                             60 ;--------------------------------------------------------
                             61 	.area _DABS (ABS)
                             62 ;--------------------------------------------------------
                             63 ; global & static initialisations
                             64 ;--------------------------------------------------------
                             65 	.area _HOME
                             66 	.area _GSINIT
                             67 	.area _GSFINAL
                             68 	.area _GSINIT
                             69 ;--------------------------------------------------------
                             70 ; Home
                             71 ;--------------------------------------------------------
                             72 	.area _HOME
                             73 	.area _HOME
                             74 ;--------------------------------------------------------
                             75 ; code
                             76 ;--------------------------------------------------------
                             77 	.area _CODE
                             78 ;src/menu.c:34: int putchar (int character)
                             79 ;	---------------------------------
                             80 ; Function putchar
                             81 ; ---------------------------------
   0000                      82 _putchar::
                             83 ;src/menu.c:46: __endasm;
   0000 21 02 00      [10]   84 	ld	hl, #2
   0003 39            [11]   85 	add	hl, sp ;Bypass the return address of the function
   0004 7E            [ 7]   86 	ld	a, (hl)
   0005 FD 2A C0 FC   [20]   87 	ld	iy,(#0xfcc1 -1) ;BIOS slot in iyh
   0009 DD E5         [15]   88 	push	ix
   000B DD 21 A2 00   [14]   89 	ld	ix,#0x00a2 ;address of BIOS routine
   000F CD 1C 00      [17]   90 	call	0x001c ;interslot call
   0012 DD E1         [14]   91 	pop	ix
                             92 ;src/menu.c:48: return character;
   0014 C1            [10]   93 	pop	bc
   0015 E1            [10]   94 	pop	hl
   0016 E5            [11]   95 	push	hl
   0017 C5            [11]   96 	push	bc
                             97 ;src/menu.c:49: }
   0018 C9            [10]   98 	ret
   0019                      99 _Done_Version_tag:
   0019 4D 61 64 65 20 77   100 	.ascii "Made with FUSION-C 1.3 R21010 (c)EBSOFT:2021"
        69 74 68 20 46 55
        53 49 4F 4E 2D 43
        20 31 2E 33 20 52
        32 31 30 31 30 20
        28 63 29 45 42 53
        4F 46 54 3A 32 30
        32 31
   0045 00                  101 	.db 0x00
                            102 ;src/menu.c:53: char* mapper_description(int number) {
                            103 ;	---------------------------------
                            104 ; Function mapper_description
                            105 ; ---------------------------------
   0046                     106 _mapper_description::
   0046 DD E5         [15]  107 	push	ix
   0048 DD 21 00 00   [14]  108 	ld	ix,#0
   004C DD 39         [15]  109 	add	ix,sp
   004E 21 F8 FF      [10]  110 	ld	hl, #-8
   0051 39            [11]  111 	add	hl, sp
   0052 F9            [ 6]  112 	ld	sp, hl
                            113 ;src/menu.c:55: const char *descriptions[] = {"16KB", "32KB", "KONAMI", "LINEAR0"};
   0053 21 00 00      [10]  114 	ld	hl, #0
   0056 39            [11]  115 	add	hl, sp
   0057 EB            [ 4]  116 	ex	de, hl
   0058 6B            [ 4]  117 	ld	l, e
   0059 62            [ 4]  118 	ld	h, d
   005A 36r90         [10]  119 	ld	(hl), #<(___str_1)
   005C 23            [ 6]  120 	inc	hl
   005D 36s00         [10]  121 	ld	(hl), #>(___str_1)
   005F 6B            [ 4]  122 	ld	l, e
   0060 62            [ 4]  123 	ld	h, d
   0061 23            [ 6]  124 	inc	hl
   0062 23            [ 6]  125 	inc	hl
   0063 01r95r00      [10]  126 	ld	bc, #___str_2+0
   0066 71            [ 7]  127 	ld	(hl), c
   0067 23            [ 6]  128 	inc	hl
   0068 70            [ 7]  129 	ld	(hl), b
   0069 21 04 00      [10]  130 	ld	hl, #0x0004
   006C 19            [11]  131 	add	hl, de
   006D 01r9Ar00      [10]  132 	ld	bc, #___str_3+0
   0070 71            [ 7]  133 	ld	(hl), c
   0071 23            [ 6]  134 	inc	hl
   0072 70            [ 7]  135 	ld	(hl), b
   0073 21 06 00      [10]  136 	ld	hl, #0x0006
   0076 19            [11]  137 	add	hl, de
   0077 01rA1r00      [10]  138 	ld	bc, #___str_4+0
   007A 71            [ 7]  139 	ld	(hl), c
   007B 23            [ 6]  140 	inc	hl
   007C 70            [ 7]  141 	ld	(hl), b
                            142 ;src/menu.c:56: return descriptions[number - 1];
   007D DD 7E 04      [19]  143 	ld	a, 4 (ix)
   0080 3D            [ 4]  144 	dec	a
   0081 6F            [ 4]  145 	ld	l, a
   0082 17            [ 4]  146 	rla
   0083 9F            [ 4]  147 	sbc	a, a
   0084 67            [ 4]  148 	ld	h, a
   0085 29            [11]  149 	add	hl, hl
   0086 19            [11]  150 	add	hl, de
   0087 4E            [ 7]  151 	ld	c, (hl)
   0088 23            [ 6]  152 	inc	hl
   0089 66            [ 7]  153 	ld	h, (hl)
   008A 69            [ 4]  154 	ld	l, c
                            155 ;src/menu.c:57: }
   008B DD F9         [10]  156 	ld	sp, ix
   008D DD E1         [14]  157 	pop	ix
   008F C9            [10]  158 	ret
   0090                     159 ___str_1:
   0090 31 36 4B 42         160 	.ascii "16KB"
   0094 00                  161 	.db 0x00
   0095                     162 ___str_2:
   0095 33 32 4B 42         163 	.ascii "32KB"
   0099 00                  164 	.db 0x00
   009A                     165 ___str_3:
   009A 4B 4F 4E 41 4D 49   166 	.ascii "KONAMI"
   00A0 00                  167 	.db 0x00
   00A1                     168 ___str_4:
   00A1 4C 49 4E 45 41 52   169 	.ascii "LINEAR0"
        30
   00A8 00                  170 	.db 0x00
                            171 ;src/menu.c:60: void displayMenu() {
                            172 ;	---------------------------------
                            173 ; Function displayMenu
                            174 ; ---------------------------------
   00A9                     175 _displayMenu::
   00A9 DD E5         [15]  176 	push	ix
   00AB DD 21 00 00   [14]  177 	ld	ix,#0
   00AF DD 39         [15]  178 	add	ix,sp
   00B1 21 F6 FF      [10]  179 	ld	hl, #-10
   00B4 39            [11]  180 	add	hl, sp
   00B5 F9            [ 6]  181 	ld	sp, hl
                            182 ;src/menu.c:62: Screen(0); // Set the screen mode
   00B6 AF            [ 4]  183 	xor	a, a
   00B7 F5            [11]  184 	push	af
   00B8 33            [ 6]  185 	inc	sp
   00B9 CDr00r00      [17]  186 	call	_Screen
   00BC 33            [ 6]  187 	inc	sp
                            188 ;src/menu.c:63: Cls(); // Clear the screen
   00BD CDr00r00      [17]  189 	call	_Cls
                            190 ;src/menu.c:66: printf("MSX PICOVERSE 2040     [MultiROM v1.0]");
   00C0 21r06r02      [10]  191 	ld	hl, #___str_5
   00C3 E5            [11]  192 	push	hl
   00C4 CDr00r00      [17]  193 	call	_printf
                            194 ;src/menu.c:67: Locate(0, 1);
   00C7 26 01         [ 7]  195 	ld	h,#0x01
   00C9 E3            [19]  196 	ex	(sp),hl
   00CA 33            [ 6]  197 	inc	sp
   00CB AF            [ 4]  198 	xor	a, a
   00CC F5            [11]  199 	push	af
   00CD 33            [ 6]  200 	inc	sp
   00CE CDr00r00      [17]  201 	call	_Locate
                            202 ;src/menu.c:68: printf("--------------------------------------");
   00D1 21r2Dr02      [10]  203 	ld	hl, #___str_6
   00D4 E3            [19]  204 	ex	(sp),hl
   00D5 CDr00r00      [17]  205 	call	_printf
                            206 ;src/menu.c:69: int xi = currentIndex%(FILES_PER_PAGE-1); // Calculate the index of the file to start displaying
   00D8 21 12 00      [10]  207 	ld	hl, #0x0012
   00DB E3            [19]  208 	ex	(sp),hl
   00DC 2Ar04r0C      [16]  209 	ld	hl, (_currentIndex)
   00DF E5            [11]  210 	push	hl
   00E0 CDr00r00      [17]  211 	call	__modsint
   00E3 F1            [10]  212 	pop	af
   00E4 F1            [10]  213 	pop	af
   00E5 33            [ 6]  214 	inc	sp
   00E6 33            [ 6]  215 	inc	sp
   00E7 E5            [11]  216 	push	hl
                            217 ;src/menu.c:70: for (int i = 0; (i < FILES_PER_PAGE) && (xi<totalFiles-1) ; i++)  // Loop through the files
   00E8 DD 36 FE 00   [19]  218 	ld	-2 (ix), #0x00
   00EC DD 36 FF 00   [19]  219 	ld	-1 (ix), #0x00
   00F0                     220 00104$:
   00F0 DD 7E FE      [19]  221 	ld	a, -2 (ix)
   00F3 D6 13         [ 7]  222 	sub	a, #0x13
   00F5 DD 7E FF      [19]  223 	ld	a, -1 (ix)
   00F8 17            [ 4]  224 	rla
   00F9 3F            [ 4]  225 	ccf
   00FA 1F            [ 4]  226 	rra
   00FB DE 80         [ 7]  227 	sbc	a, #0x80
   00FD D2rB2r01      [10]  228 	jp	NC, 00101$
   0100 ED 4Br06r0C   [20]  229 	ld	bc, (_totalFiles)
   0104 0B            [ 6]  230 	dec	bc
   0105 DD 7E F6      [19]  231 	ld	a, -10 (ix)
   0108 91            [ 4]  232 	sub	a, c
   0109 DD 7E F7      [19]  233 	ld	a, -9 (ix)
   010C 98            [ 4]  234 	sbc	a, b
   010D E2r12r01      [10]  235 	jp	PO, 00124$
   0110 EE 80         [ 7]  236 	xor	a, #0x80
   0112                     237 00124$:
   0112 F2rB2r01      [10]  238 	jp	P, 00101$
                            239 ;src/menu.c:72: Locate(1, 2 + i); // Position on the screen, starting at line 2
   0115 DD 7E FE      [19]  240 	ld	a, -2 (ix)
   0118 C6 02         [ 7]  241 	add	a, #0x02
   011A 57            [ 4]  242 	ld	d,a
   011B 1E 01         [ 7]  243 	ld	e,#0x01
   011D D5            [11]  244 	push	de
   011E CDr00r00      [17]  245 	call	_Locate
   0121 F1            [10]  246 	pop	af
                            247 ;src/menu.c:73: xi = i+((currentPage-1)*FILES_PER_PAGE); // Calculate the index of the file to display
   0122 ED 4Br00r0C   [20]  248 	ld	bc, (_currentPage)
   0126 0B            [ 6]  249 	dec	bc
   0127 69            [ 4]  250 	ld	l, c
   0128 60            [ 4]  251 	ld	h, b
   0129 29            [11]  252 	add	hl, hl
   012A 29            [11]  253 	add	hl, hl
   012B 29            [11]  254 	add	hl, hl
   012C 09            [11]  255 	add	hl, bc
   012D 29            [11]  256 	add	hl, hl
   012E 09            [11]  257 	add	hl, bc
   012F DD 5E FE      [19]  258 	ld	e, -2 (ix)
   0132 DD 56 FF      [19]  259 	ld	d, -1 (ix)
   0135 19            [11]  260 	add	hl, de
   0136 33            [ 6]  261 	inc	sp
   0137 33            [ 6]  262 	inc	sp
                            263 ;src/menu.c:74: printf("%-22s %4luKB %-8s",game[xi], size[xi]/1024, mapper_description(mapp[xi]));  // Print each file name, size and mapper
   0138 EB            [ 4]  264 	ex	de,hl
   0139 D5            [11]  265 	push	de
   013A CB 23         [ 8]  266 	sla	e
   013C CB 12         [ 8]  267 	rl	d
   013E 21r00r02      [10]  268 	ld	hl, #_mapp
   0141 19            [11]  269 	add	hl, de
   0142 4E            [ 7]  270 	ld	c, (hl)
   0143 23            [ 6]  271 	inc	hl
   0144 46            [ 7]  272 	ld	b, (hl)
   0145 D5            [11]  273 	push	de
   0146 C5            [11]  274 	push	bc
   0147 CDr46r00      [17]  275 	call	_mapper_description
   014A F1            [10]  276 	pop	af
   014B DD 75 F8      [19]  277 	ld	-8 (ix), l
   014E DD 74 F9      [19]  278 	ld	-7 (ix), h
   0151 D1            [10]  279 	pop	de
   0152 E1            [10]  280 	pop	hl
   0153 E5            [11]  281 	push	hl
   0154 29            [11]  282 	add	hl, hl
   0155 29            [11]  283 	add	hl, hl
   0156 01r00r08      [10]  284 	ld	bc, #_size
   0159 09            [11]  285 	add	hl, bc
   015A 23            [ 6]  286 	inc	hl
   015B 46            [ 7]  287 	ld	b, (hl)
   015C 23            [ 6]  288 	inc	hl
   015D 23            [ 6]  289 	inc	hl
   015E 7E            [ 7]  290 	ld	a, (hl)
   015F 2B            [ 6]  291 	dec	hl
   0160 6E            [ 7]  292 	ld	l, (hl)
   0161 67            [ 4]  293 	ld	h, a
   0162 DD 70 FA      [19]  294 	ld	-6 (ix), b
   0165 DD 75 FB      [19]  295 	ld	-5 (ix), l
   0168 DD 74 FC      [19]  296 	ld	-4 (ix), h
   016B DD 36 FD 00   [19]  297 	ld	-3 (ix), #0x00
   016F 06 02         [ 7]  298 	ld	b, #0x02
   0171                     299 00127$:
   0171 DD CB FC 3E   [23]  300 	srl	-4 (ix)
   0175 DD CB FB 1E   [23]  301 	rr	-5 (ix)
   0179 DD CB FA 1E   [23]  302 	rr	-6 (ix)
   017D 10 F2         [13]  303 	djnz	00127$
   017F 21r00r00      [10]  304 	ld	hl, #_game
   0182 19            [11]  305 	add	hl, de
   0183 4E            [ 7]  306 	ld	c, (hl)
   0184 23            [ 6]  307 	inc	hl
   0185 46            [ 7]  308 	ld	b, (hl)
   0186 D1            [10]  309 	pop	de
   0187 E1            [10]  310 	pop	hl
   0188 E5            [11]  311 	push	hl
   0189 D5            [11]  312 	push	de
   018A E5            [11]  313 	push	hl
   018B DD 6E FC      [19]  314 	ld	l, -4 (ix)
   018E DD 66 FD      [19]  315 	ld	h, -3 (ix)
   0191 E5            [11]  316 	push	hl
   0192 DD 6E FA      [19]  317 	ld	l, -6 (ix)
   0195 DD 66 FB      [19]  318 	ld	h, -5 (ix)
   0198 E5            [11]  319 	push	hl
   0199 C5            [11]  320 	push	bc
   019A 21r54r02      [10]  321 	ld	hl, #___str_7
   019D E5            [11]  322 	push	hl
   019E CDr00r00      [17]  323 	call	_printf
   01A1 21 0A 00      [10]  324 	ld	hl, #10
   01A4 39            [11]  325 	add	hl, sp
   01A5 F9            [ 6]  326 	ld	sp, hl
                            327 ;src/menu.c:70: for (int i = 0; (i < FILES_PER_PAGE) && (xi<totalFiles-1) ; i++)  // Loop through the files
   01A6 DD 34 FE      [23]  328 	inc	-2 (ix)
   01A9 C2rF0r00      [10]  329 	jp	NZ,00104$
   01AC DD 34 FF      [23]  330 	inc	-1 (ix)
   01AF C3rF0r00      [10]  331 	jp	00104$
   01B2                     332 00101$:
                            333 ;src/menu.c:77: Locate(0, 21);
   01B2 3E 15         [ 7]  334 	ld	a, #0x15
   01B4 F5            [11]  335 	push	af
   01B5 33            [ 6]  336 	inc	sp
   01B6 AF            [ 4]  337 	xor	a, a
   01B7 F5            [11]  338 	push	af
   01B8 33            [ 6]  339 	inc	sp
   01B9 CDr00r00      [17]  340 	call	_Locate
                            341 ;src/menu.c:78: printf("--------------------------------------");
   01BC 21r2Dr02      [10]  342 	ld	hl, #___str_6
   01BF E3            [19]  343 	ex	(sp),hl
   01C0 CDr00r00      [17]  344 	call	_printf
                            345 ;src/menu.c:79: Locate(0, 22);
   01C3 26 16         [ 7]  346 	ld	h,#0x16
   01C5 E3            [19]  347 	ex	(sp),hl
   01C6 33            [ 6]  348 	inc	sp
   01C7 AF            [ 4]  349 	xor	a, a
   01C8 F5            [11]  350 	push	af
   01C9 33            [ 6]  351 	inc	sp
   01CA CDr00r00      [17]  352 	call	_Locate
   01CD F1            [10]  353 	pop	af
                            354 ;src/menu.c:80: printf("Page %02d/%02d     [H - Help] [C - Config]",currentPage, totalPages); // Print the page number and the help and config options
   01CE 2Ar02r0C      [16]  355 	ld	hl, (_totalPages)
   01D1 E5            [11]  356 	push	hl
   01D2 2Ar00r0C      [16]  357 	ld	hl, (_currentPage)
   01D5 E5            [11]  358 	push	hl
   01D6 21r66r02      [10]  359 	ld	hl, #___str_8
   01D9 E5            [11]  360 	push	hl
   01DA CDr00r00      [17]  361 	call	_printf
   01DD 21 06 00      [10]  362 	ld	hl, #6
   01E0 39            [11]  363 	add	hl, sp
   01E1 F9            [ 6]  364 	ld	sp, hl
                            365 ;src/menu.c:81: Locate(0, (currentIndex%FILES_PER_PAGE) + 2); // Position the cursor on the selected file
   01E2 21 13 00      [10]  366 	ld	hl, #0x0013
   01E5 E5            [11]  367 	push	hl
   01E6 2Ar04r0C      [16]  368 	ld	hl, (_currentIndex)
   01E9 E5            [11]  369 	push	hl
   01EA CDr00r00      [17]  370 	call	__modsint
   01ED F1            [10]  371 	pop	af
   01EE F1            [10]  372 	pop	af
   01EF 7D            [ 4]  373 	ld	a, l
   01F0 C6 02         [ 7]  374 	add	a, #0x02
   01F2 F5            [11]  375 	push	af
   01F3 33            [ 6]  376 	inc	sp
   01F4 AF            [ 4]  377 	xor	a, a
   01F5 F5            [11]  378 	push	af
   01F6 33            [ 6]  379 	inc	sp
   01F7 CDr00r00      [17]  380 	call	_Locate
                            381 ;src/menu.c:82: printf(">"); // Print the cursor
   01FA 21r91r02      [10]  382 	ld	hl, #___str_9
   01FD E3            [19]  383 	ex	(sp),hl
   01FE CDr00r00      [17]  384 	call	_printf
                            385 ;src/menu.c:83: }
   0201 DD F9         [10]  386 	ld	sp,ix
   0203 DD E1         [14]  387 	pop	ix
   0205 C9            [10]  388 	ret
   0206                     389 ___str_5:
   0206 4D 53 58 20 50 49   390 	.ascii "MSX PICOVERSE 2040     [MultiROM v1.0]"
        43 4F 56 45 52 53
        45 20 32 30 34 30
        20 20 20 20 20 5B
        4D 75 6C 74 69 52
        4F 4D 20 76 31 2E
        30 5D
   022C 00                  391 	.db 0x00
   022D                     392 ___str_6:
   022D 2D 2D 2D 2D 2D 2D   393 	.ascii "--------------------------------------"
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D
   0253 00                  394 	.db 0x00
   0254                     395 ___str_7:
   0254 25 2D 32 32 73 20   396 	.ascii "%-22s %4luKB %-8s"
        25 34 6C 75 4B 42
        20 25 2D 38 73
   0265 00                  397 	.db 0x00
   0266                     398 ___str_8:
   0266 50 61 67 65 20 25   399 	.ascii "Page %02d/%02d     [H - Help] [C - Config]"
        30 32 64 2F 25 30
        32 64 20 20 20 20
        20 5B 48 20 2D 20
        48 65 6C 70 5D 20
        5B 43 20 2D 20 43
        6F 6E 66 69 67 5D
   0290 00                  400 	.db 0x00
   0291                     401 ___str_9:
   0291 3E                  402 	.ascii ">"
   0292 00                  403 	.db 0x00
                            404 ;src/menu.c:85: void helpMenu()
                            405 ;	---------------------------------
                            406 ; Function helpMenu
                            407 ; ---------------------------------
   0293                     408 _helpMenu::
   0293 DD E5         [15]  409 	push	ix
   0295 DD 21 00 00   [14]  410 	ld	ix,#0
   0299 DD 39         [15]  411 	add	ix,sp
   029B F5            [11]  412 	push	af
                            413 ;src/menu.c:88: Cls(); // Clear the screen
   029C CDr00r00      [17]  414 	call	_Cls
                            415 ;src/menu.c:89: printf("MSX PICOVERSE 2040     [MultiROM v1.0]");
   029F 21r7Dr03      [10]  416 	ld	hl, #___str_10
   02A2 E5            [11]  417 	push	hl
   02A3 CDr00r00      [17]  418 	call	_printf
                            419 ;src/menu.c:90: Locate(0, 1);
   02A6 26 01         [ 7]  420 	ld	h,#0x01
   02A8 E3            [19]  421 	ex	(sp),hl
   02A9 33            [ 6]  422 	inc	sp
   02AA AF            [ 4]  423 	xor	a, a
   02AB F5            [11]  424 	push	af
   02AC 33            [ 6]  425 	inc	sp
   02AD CDr00r00      [17]  426 	call	_Locate
                            427 ;src/menu.c:91: printf("--------------------------------------");
   02B0 21rA4r03      [10]  428 	ld	hl, #___str_11
   02B3 E3            [19]  429 	ex	(sp),hl
   02B4 CDr00r00      [17]  430 	call	_printf
                            431 ;src/menu.c:92: Locate(0, 2);
   02B7 26 02         [ 7]  432 	ld	h,#0x02
   02B9 E3            [19]  433 	ex	(sp),hl
   02BA 33            [ 6]  434 	inc	sp
   02BB AF            [ 4]  435 	xor	a, a
   02BC F5            [11]  436 	push	af
   02BD 33            [ 6]  437 	inc	sp
   02BE CDr00r00      [17]  438 	call	_Locate
                            439 ;src/menu.c:93: printf("Use [UP]  [DOWN] to navigate the menu.");
   02C1 21rCBr03      [10]  440 	ld	hl, #___str_12
   02C4 E3            [19]  441 	ex	(sp),hl
   02C5 CDr00r00      [17]  442 	call	_printf
                            443 ;src/menu.c:94: Locate(0, 3);
   02C8 26 03         [ 7]  444 	ld	h,#0x03
   02CA E3            [19]  445 	ex	(sp),hl
   02CB 33            [ 6]  446 	inc	sp
   02CC AF            [ 4]  447 	xor	a, a
   02CD F5            [11]  448 	push	af
   02CE 33            [ 6]  449 	inc	sp
   02CF CDr00r00      [17]  450 	call	_Locate
                            451 ;src/menu.c:95: printf("Use [LEFT] [RIGHT] to navigate  pages.");
   02D2 21rF2r03      [10]  452 	ld	hl, #___str_13
   02D5 E3            [19]  453 	ex	(sp),hl
   02D6 CDr00r00      [17]  454 	call	_printf
                            455 ;src/menu.c:96: Locate(0, 4);
   02D9 26 04         [ 7]  456 	ld	h,#0x04
   02DB E3            [19]  457 	ex	(sp),hl
   02DC 33            [ 6]  458 	inc	sp
   02DD AF            [ 4]  459 	xor	a, a
   02DE F5            [11]  460 	push	af
   02DF 33            [ 6]  461 	inc	sp
   02E0 CDr00r00      [17]  462 	call	_Locate
                            463 ;src/menu.c:97: printf("Press [H] to display the help screen.");
   02E3 21r19r04      [10]  464 	ld	hl, #___str_14
   02E6 E3            [19]  465 	ex	(sp),hl
   02E7 CDr00r00      [17]  466 	call	_printf
                            467 ;src/menu.c:98: Locate(0, 5);
   02EA 26 05         [ 7]  468 	ld	h,#0x05
   02EC E3            [19]  469 	ex	(sp),hl
   02ED 33            [ 6]  470 	inc	sp
   02EE AF            [ 4]  471 	xor	a, a
   02EF F5            [11]  472 	push	af
   02F0 33            [ 6]  473 	inc	sp
   02F1 CDr00r00      [17]  474 	call	_Locate
                            475 ;src/menu.c:99: printf("Press [C] to display the config page.");
   02F4 21r3Fr04      [10]  476 	ld	hl, #___str_15
   02F7 E3            [19]  477 	ex	(sp),hl
   02F8 CDr00r00      [17]  478 	call	_printf
                            479 ;src/menu.c:100: Locate(0, 7);
   02FB 26 07         [ 7]  480 	ld	h,#0x07
   02FD E3            [19]  481 	ex	(sp),hl
   02FE 33            [ 6]  482 	inc	sp
   02FF AF            [ 4]  483 	xor	a, a
   0300 F5            [11]  484 	push	af
   0301 33            [ 6]  485 	inc	sp
   0302 CDr00r00      [17]  486 	call	_Locate
   0305 F1            [10]  487 	pop	af
                            488 ;src/menu.c:107: col = 0;
   0306 01 00 00      [10]  489 	ld	bc, #0x0000
                            490 ;src/menu.c:109: for (int i = 33; i < 256; i++) 
   0309 21 08 00      [10]  491 	ld	hl, #0x0008
   030C E3            [19]  492 	ex	(sp), hl
   030D 11 21 00      [10]  493 	ld	de, #0x0021
   0310                     494 00105$:
   0310 7A            [ 4]  495 	ld	a, d
   0311 EE 80         [ 7]  496 	xor	a, #0x80
   0313 D6 81         [ 7]  497 	sub	a, #0x81
   0315 30 35         [12]  498 	jr	NC,00103$
                            499 ;src/menu.c:112: Locate(col, row);
   0317 DD 66 FE      [19]  500 	ld	h, -2 (ix)
   031A 79            [ 4]  501 	ld	a, c
   031B C5            [11]  502 	push	bc
   031C D5            [11]  503 	push	de
   031D E5            [11]  504 	push	hl
   031E 33            [ 6]  505 	inc	sp
   031F F5            [11]  506 	push	af
   0320 33            [ 6]  507 	inc	sp
   0321 CDr00r00      [17]  508 	call	_Locate
   0324 F1            [10]  509 	pop	af
   0325 D1            [10]  510 	pop	de
   0326 C1            [10]  511 	pop	bc
                            512 ;src/menu.c:114: PrintChar(i);
   0327 7B            [ 4]  513 	ld	a, e
   0328 C5            [11]  514 	push	bc
   0329 D5            [11]  515 	push	de
   032A F5            [11]  516 	push	af
   032B 33            [ 6]  517 	inc	sp
   032C CDr00r00      [17]  518 	call	_PrintChar
   032F 33            [ 6]  519 	inc	sp
   0330 D1            [10]  520 	pop	de
   0331 C1            [10]  521 	pop	bc
                            522 ;src/menu.c:116: col++;
   0332 03            [ 6]  523 	inc	bc
                            524 ;src/menu.c:118: if (col >= 40) {
   0333 79            [ 4]  525 	ld	a, c
   0334 D6 28         [ 7]  526 	sub	a, #0x28
   0336 78            [ 4]  527 	ld	a, b
   0337 17            [ 4]  528 	rla
   0338 3F            [ 4]  529 	ccf
   0339 1F            [ 4]  530 	rra
   033A DE 80         [ 7]  531 	sbc	a, #0x80
   033C 38 0B         [12]  532 	jr	C,00106$
                            533 ;src/menu.c:119: col = 0;
   033E 01 00 00      [10]  534 	ld	bc, #0x0000
                            535 ;src/menu.c:120: row++;
   0341 DD 34 FE      [23]  536 	inc	-2 (ix)
   0344 20 03         [12]  537 	jr	NZ,00125$
   0346 DD 34 FF      [23]  538 	inc	-1 (ix)
   0349                     539 00125$:
   0349                     540 00106$:
                            541 ;src/menu.c:109: for (int i = 33; i < 256; i++) 
   0349 13            [ 6]  542 	inc	de
   034A 18 C4         [12]  543 	jr	00105$
   034C                     544 00103$:
                            545 ;src/menu.c:124: Locate(0, 21);
   034C 3E 15         [ 7]  546 	ld	a, #0x15
   034E F5            [11]  547 	push	af
   034F 33            [ 6]  548 	inc	sp
   0350 AF            [ 4]  549 	xor	a, a
   0351 F5            [11]  550 	push	af
   0352 33            [ 6]  551 	inc	sp
   0353 CDr00r00      [17]  552 	call	_Locate
                            553 ;src/menu.c:125: printf("--------------------------------------");
   0356 21rA4r03      [10]  554 	ld	hl, #___str_11
   0359 E3            [19]  555 	ex	(sp),hl
   035A CDr00r00      [17]  556 	call	_printf
                            557 ;src/menu.c:126: Locate(0, 22);
   035D 26 16         [ 7]  558 	ld	h,#0x16
   035F E3            [19]  559 	ex	(sp),hl
   0360 33            [ 6]  560 	inc	sp
   0361 AF            [ 4]  561 	xor	a, a
   0362 F5            [11]  562 	push	af
   0363 33            [ 6]  563 	inc	sp
   0364 CDr00r00      [17]  564 	call	_Locate
                            565 ;src/menu.c:127: printf("Press any key to return to the menu...");
   0367 21r65r04      [10]  566 	ld	hl, #___str_16
   036A E3            [19]  567 	ex	(sp),hl
   036B CDr00r00      [17]  568 	call	_printf
   036E F1            [10]  569 	pop	af
                            570 ;src/menu.c:128: WaitKey();
   036F CDr00r00      [17]  571 	call	_WaitKey
                            572 ;src/menu.c:129: displayMenu();
   0372 CDrA9r00      [17]  573 	call	_displayMenu
                            574 ;src/menu.c:130: navigateMenu();
   0375 CDr8Cr04      [17]  575 	call	_navigateMenu
                            576 ;src/menu.c:131: }
   0378 DD F9         [10]  577 	ld	sp, ix
   037A DD E1         [14]  578 	pop	ix
   037C C9            [10]  579 	ret
   037D                     580 ___str_10:
   037D 4D 53 58 20 50 49   581 	.ascii "MSX PICOVERSE 2040     [MultiROM v1.0]"
        43 4F 56 45 52 53
        45 20 32 30 34 30
        20 20 20 20 20 5B
        4D 75 6C 74 69 52
        4F 4D 20 76 31 2E
        30 5D
   03A3 00                  582 	.db 0x00
   03A4                     583 ___str_11:
   03A4 2D 2D 2D 2D 2D 2D   584 	.ascii "--------------------------------------"
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D 2D 2D 2D 2D
        2D 2D
   03CA 00                  585 	.db 0x00
   03CB                     586 ___str_12:
   03CB 55 73 65 20 5B 55   587 	.ascii "Use [UP]  [DOWN] to navigate the menu."
        50 5D 20 20 5B 44
        4F 57 4E 5D 20 74
        6F 20 6E 61 76 69
        67 61 74 65 20 74
        68 65 20 6D 65 6E
        75 2E
   03F1 00                  588 	.db 0x00
   03F2                     589 ___str_13:
   03F2 55 73 65 20 5B 4C   590 	.ascii "Use [LEFT] [RIGHT] to navigate  pages."
        45 46 54 5D 20 5B
        52 49 47 48 54 5D
        20 74 6F 20 6E 61
        76 69 67 61 74 65
        20 20 70 61 67 65
        73 2E
   0418 00                  591 	.db 0x00
   0419                     592 ___str_14:
   0419 50 72 65 73 73 20   593 	.ascii "Press [H] to display the help screen."
        5B 48 5D 20 74 6F
        20 64 69 73 70 6C
        61 79 20 74 68 65
        20 68 65 6C 70 20
        73 63 72 65 65 6E
        2E
   043E 00                  594 	.db 0x00
   043F                     595 ___str_15:
   043F 50 72 65 73 73 20   596 	.ascii "Press [C] to display the config page."
        5B 43 5D 20 74 6F
        20 64 69 73 70 6C
        61 79 20 74 68 65
        20 63 6F 6E 66 69
        67 20 70 61 67 65
        2E
   0464 00                  597 	.db 0x00
   0465                     598 ___str_16:
   0465 50 72 65 73 73 20   599 	.ascii "Press any key to return to the menu..."
        61 6E 79 20 6B 65
        79 20 74 6F 20 72
        65 74 75 72 6E 20
        74 6F 20 74 68 65
        20 6D 65 6E 75 2E
        2E 2E
   048B 00                  600 	.db 0x00
                            601 ;src/menu.c:133: void navigateMenu() 
                            602 ;	---------------------------------
                            603 ; Function navigateMenu
                            604 ; ---------------------------------
   048C                     605 _navigateMenu::
   048C DD E5         [15]  606 	push	ix
   048E DD 21 00 00   [14]  607 	ld	ix,#0
   0492 DD 39         [15]  608 	add	ix,sp
   0494 F5            [11]  609 	push	af
   0495 3B            [ 6]  610 	dec	sp
                            611 ;src/menu.c:137: while (1) 
   0496                     612 00124$:
                            613 ;src/menu.c:143: Locate(0, (currentIndex%FILES_PER_PAGE) + 2);
   0496 21 13 00      [10]  614 	ld	hl, #0x0013
   0499 E5            [11]  615 	push	hl
   049A 2Ar04r0C      [16]  616 	ld	hl, (_currentIndex)
   049D E5            [11]  617 	push	hl
   049E CDr00r00      [17]  618 	call	__modsint
   04A1 F1            [10]  619 	pop	af
   04A2 F1            [10]  620 	pop	af
   04A3 7D            [ 4]  621 	ld	a, l
   04A4 C6 02         [ 7]  622 	add	a, #0x02
   04A6 F5            [11]  623 	push	af
   04A7 33            [ 6]  624 	inc	sp
   04A8 AF            [ 4]  625 	xor	a, a
   04A9 F5            [11]  626 	push	af
   04AA 33            [ 6]  627 	inc	sp
   04AB CDr00r00      [17]  628 	call	_Locate
   04AE F1            [10]  629 	pop	af
                            630 ;src/menu.c:144: key = WaitKey();
   04AF CDr00r00      [17]  631 	call	_WaitKey
   04B2 DD 75 FD      [19]  632 	ld	-3 (ix), l
                            633 ;src/menu.c:150: Locate(0, (currentIndex%FILES_PER_PAGE) + 2); // Position the cursor on the selected file
   04B5 21 13 00      [10]  634 	ld	hl, #0x0013
   04B8 E5            [11]  635 	push	hl
   04B9 2Ar04r0C      [16]  636 	ld	hl, (_currentIndex)
   04BC E5            [11]  637 	push	hl
   04BD CDr00r00      [17]  638 	call	__modsint
   04C0 F1            [10]  639 	pop	af
   04C1 F1            [10]  640 	pop	af
   04C2 7D            [ 4]  641 	ld	a, l
   04C3 C6 02         [ 7]  642 	add	a, #0x02
   04C5 F5            [11]  643 	push	af
   04C6 33            [ 6]  644 	inc	sp
   04C7 AF            [ 4]  645 	xor	a, a
   04C8 F5            [11]  646 	push	af
   04C9 33            [ 6]  647 	inc	sp
   04CA CDr00r00      [17]  648 	call	_Locate
                            649 ;src/menu.c:151: printf(" "); // Clear the cursor
   04CD 21r66r06      [10]  650 	ld	hl, #___str_17
   04D0 E3            [19]  651 	ex	(sp),hl
   04D1 CDr00r00      [17]  652 	call	_printf
   04D4 F1            [10]  653 	pop	af
                            654 ;src/menu.c:169: currentPage++; // Move to the next page
   04D5 ED 5Br00r0C   [20]  655 	ld	de, (_currentPage)
   04D9 13            [ 6]  656 	inc	de
                            657 ;src/menu.c:152: switch (key) 
   04DA DD 7E FD      [19]  658 	ld	a, -3 (ix)
   04DD D6 1C         [ 7]  659 	sub	a, #0x1c
   04DF CArC8r05      [10]  660 	jp	Z,00114$
                            661 ;src/menu.c:158: if (currentIndex < ((currentPage-1) * FILES_PER_PAGE))  // Check if we need to move to the previous page
   04E2 ED 4Br00r0C   [20]  662 	ld	bc, (_currentPage)
   04E6 0B            [ 6]  663 	dec	bc
                            664 ;src/menu.c:152: switch (key) 
   04E7 DD 7E FD      [19]  665 	ld	a, -3 (ix)
   04EA D6 1D         [ 7]  666 	sub	a, #0x1d
   04EC CArF9r05      [10]  667 	jp	Z,00117$
                            668 ;src/menu.c:143: Locate(0, (currentIndex%FILES_PER_PAGE) + 2);
   04EF C5            [11]  669 	push	bc
   04F0 D5            [11]  670 	push	de
   04F1 21 13 00      [10]  671 	ld	hl, #0x0013
   04F4 E5            [11]  672 	push	hl
   04F5 2Ar04r0C      [16]  673 	ld	hl, (_currentIndex)
   04F8 E5            [11]  674 	push	hl
                            675 ;src/menu.c:152: switch (key) 
   04F9 CDr00r00      [17]  676 	call	__modsint
   04FC F1            [10]  677 	pop	af
   04FD F1            [10]  678 	pop	af
   04FE DD 75 FE      [19]  679 	ld	-2 (ix), l
   0501 DD 74 FF      [19]  680 	ld	-1 (ix), h
   0504 D1            [10]  681 	pop	de
   0505 C1            [10]  682 	pop	bc
   0506 DD 7E FD      [19]  683 	ld	a, -3 (ix)
   0509 D6 1E         [ 7]  684 	sub	a, #0x1e
   050B 28 1A         [12]  685 	jr	Z,00101$
   050D DD 7E FD      [19]  686 	ld	a, -3 (ix)
   0510 D6 1F         [ 7]  687 	sub	a, #0x1f
   0512 28 5A         [12]  688 	jr	Z,00108$
   0514 DD 7E FD      [19]  689 	ld	a, -3 (ix)
   0517 D6 48         [ 7]  690 	sub	a, #0x48
   0519 CAr28r06      [10]  691 	jp	Z,00121$
   051C DD 7E FD      [19]  692 	ld	a, -3 (ix)
   051F D6 68         [ 7]  693 	sub	a, #0x68
   0521 CAr28r06      [10]  694 	jp	Z,00121$
   0524 C3r2Br06      [10]  695 	jp	00122$
                            696 ;src/menu.c:154: case 30: // Up arrow
   0527                     697 00101$:
                            698 ;src/menu.c:155: if (currentIndex > 0) // Check if we are not at the first file
   0527 AF            [ 4]  699 	xor	a, a
   0528 FD 21r04r0C   [14]  700 	ld	iy, #_currentIndex
   052C FD BE 00      [19]  701 	cp	a, 0 (iy)
   052F FD 9E 01      [19]  702 	sbc	a, 1 (iy)
   0532 E2r37r05      [10]  703 	jp	PO, 00209$
   0535 EE 80         [ 7]  704 	xor	a, #0x80
   0537                     705 00209$:
   0537 F2r2Br06      [10]  706 	jp	P, 00122$
                            707 ;src/menu.c:157: if (currentIndex%FILES_PER_PAGE >= 0) currentIndex--; // Move to the previous file
   053A DD CB FF 7E   [20]  708 	bit	7, -1 (ix)
   053E 20 07         [12]  709 	jr	NZ,00103$
   0540 2Ar04r0C      [16]  710 	ld	hl, (_currentIndex)
   0543 2B            [ 6]  711 	dec	hl
   0544 22r04r0C      [16]  712 	ld	(_currentIndex), hl
   0547                     713 00103$:
                            714 ;src/menu.c:158: if (currentIndex < ((currentPage-1) * FILES_PER_PAGE))  // Check if we need to move to the previous page
   0547 69            [ 4]  715 	ld	l, c
   0548 60            [ 4]  716 	ld	h, b
   0549 29            [11]  717 	add	hl, hl
   054A 29            [11]  718 	add	hl, hl
   054B 29            [11]  719 	add	hl, hl
   054C 09            [11]  720 	add	hl, bc
   054D 29            [11]  721 	add	hl, hl
   054E 09            [11]  722 	add	hl, bc
   054F EB            [ 4]  723 	ex	de, hl
   0550 FD 21r04r0C   [14]  724 	ld	iy, #_currentIndex
   0554 FD 7E 00      [19]  725 	ld	a, 0 (iy)
   0557 93            [ 4]  726 	sub	a, e
   0558 FD 7E 01      [19]  727 	ld	a, 1 (iy)
   055B 9A            [ 4]  728 	sbc	a, d
   055C E2r61r05      [10]  729 	jp	PO, 00210$
   055F EE 80         [ 7]  730 	xor	a, #0x80
   0561                     731 00210$:
   0561 F2r2Br06      [10]  732 	jp	P, 00122$
                            733 ;src/menu.c:160: currentPage--; // Move to the previous page
   0564 ED 43r00r0C   [20]  734 	ld	(_currentPage), bc
                            735 ;src/menu.c:161: displayMenu(); // Display the menu
   0568 CDrA9r00      [17]  736 	call	_displayMenu
                            737 ;src/menu.c:164: break;
   056B C3r2Br06      [10]  738 	jp	00122$
                            739 ;src/menu.c:165: case 31: // Down arrow
   056E                     740 00108$:
                            741 ;src/menu.c:166: if ((currentIndex%FILES_PER_PAGE < FILES_PER_PAGE) && currentIndex < totalFiles-1) currentIndex++; // Move to the next file
   056E DD 7E FE      [19]  742 	ld	a, -2 (ix)
   0571 D6 13         [ 7]  743 	sub	a, #0x13
   0573 DD 7E FF      [19]  744 	ld	a, -1 (ix)
   0576 17            [ 4]  745 	rla
   0577 3F            [ 4]  746 	ccf
   0578 1F            [ 4]  747 	rra
   0579 DE 80         [ 7]  748 	sbc	a, #0x80
   057B 30 20         [12]  749 	jr	NC,00110$
   057D ED 4Br06r0C   [20]  750 	ld	bc, (_totalFiles)
   0581 0B            [ 6]  751 	dec	bc
   0582 FD 21r04r0C   [14]  752 	ld	iy, #_currentIndex
   0586 FD 7E 00      [19]  753 	ld	a, 0 (iy)
   0589 91            [ 4]  754 	sub	a, c
   058A FD 7E 01      [19]  755 	ld	a, 1 (iy)
   058D 98            [ 4]  756 	sbc	a, b
   058E E2r93r05      [10]  757 	jp	PO, 00211$
   0591 EE 80         [ 7]  758 	xor	a, #0x80
   0593                     759 00211$:
   0593 F2r9Dr05      [10]  760 	jp	P, 00110$
   0596 2Ar04r0C      [16]  761 	ld	hl, (_currentIndex)
   0599 23            [ 6]  762 	inc	hl
   059A 22r04r0C      [16]  763 	ld	(_currentIndex), hl
   059D                     764 00110$:
                            765 ;src/menu.c:167: if (currentIndex >= (currentPage * FILES_PER_PAGE)) // Check if we need to move to the next page
   059D ED 4Br00r0C   [20]  766 	ld	bc, (_currentPage)
   05A1 69            [ 4]  767 	ld	l, c
   05A2 60            [ 4]  768 	ld	h, b
   05A3 29            [11]  769 	add	hl, hl
   05A4 29            [11]  770 	add	hl, hl
   05A5 29            [11]  771 	add	hl, hl
   05A6 09            [11]  772 	add	hl, bc
   05A7 29            [11]  773 	add	hl, hl
   05A8 09            [11]  774 	add	hl, bc
   05A9 4D            [ 4]  775 	ld	c, l
   05AA 44            [ 4]  776 	ld	b, h
   05AB FD 21r04r0C   [14]  777 	ld	iy, #_currentIndex
   05AF FD 7E 00      [19]  778 	ld	a, 0 (iy)
   05B2 91            [ 4]  779 	sub	a, c
   05B3 FD 7E 01      [19]  780 	ld	a, 1 (iy)
   05B6 98            [ 4]  781 	sbc	a, b
   05B7 E2rBCr05      [10]  782 	jp	PO, 00212$
   05BA EE 80         [ 7]  783 	xor	a, #0x80
   05BC                     784 00212$:
   05BC FAr2Br06      [10]  785 	jp	M, 00122$
                            786 ;src/menu.c:169: currentPage++; // Move to the next page
   05BF ED 53r00r0C   [20]  787 	ld	(_currentPage), de
                            788 ;src/menu.c:170: displayMenu(); // Display the menu
   05C3 CDrA9r00      [17]  789 	call	_displayMenu
                            790 ;src/menu.c:172: break;
   05C6 18 63         [12]  791 	jr	00122$
                            792 ;src/menu.c:173: case 28: // Right arrow
   05C8                     793 00114$:
                            794 ;src/menu.c:174: if (currentPage < totalPages) // Check if we are not on the last page
   05C8 21r02r0C      [10]  795 	ld	hl, #_totalPages
   05CB FD 21r00r0C   [14]  796 	ld	iy, #_currentPage
   05CF FD 7E 00      [19]  797 	ld	a, 0 (iy)
   05D2 96            [ 7]  798 	sub	a, (hl)
   05D3 FD 7E 01      [19]  799 	ld	a, 1 (iy)
   05D6 23            [ 6]  800 	inc	hl
   05D7 9E            [ 7]  801 	sbc	a, (hl)
   05D8 E2rDDr05      [10]  802 	jp	PO, 00213$
   05DB EE 80         [ 7]  803 	xor	a, #0x80
   05DD                     804 00213$:
   05DD F2r2Br06      [10]  805 	jp	P, 00122$
                            806 ;src/menu.c:176: currentPage++; // Move to the next page
   05E0 ED 53r00r0C   [20]  807 	ld	(_currentPage), de
                            808 ;src/menu.c:177: currentIndex = (currentPage-1) * FILES_PER_PAGE; // Move to the first file of the page
   05E4 ED 4Br00r0C   [20]  809 	ld	bc, (_currentPage)
   05E8 0B            [ 6]  810 	dec	bc
   05E9 69            [ 4]  811 	ld	l, c
   05EA 60            [ 4]  812 	ld	h, b
   05EB 29            [11]  813 	add	hl, hl
   05EC 29            [11]  814 	add	hl, hl
   05ED 29            [11]  815 	add	hl, hl
   05EE 09            [11]  816 	add	hl, bc
   05EF 29            [11]  817 	add	hl, hl
   05F0 09            [11]  818 	add	hl, bc
   05F1 22r04r0C      [16]  819 	ld	(_currentIndex), hl
                            820 ;src/menu.c:178: displayMenu(); // Display the menu
   05F4 CDrA9r00      [17]  821 	call	_displayMenu
                            822 ;src/menu.c:180: break;
   05F7 18 32         [12]  823 	jr	00122$
                            824 ;src/menu.c:181: case 29: // Left arrow
   05F9                     825 00117$:
                            826 ;src/menu.c:182: if (currentPage > 1) // Check if we are not on the first page
   05F9 3E 01         [ 7]  827 	ld	a, #0x01
   05FB FD 21r00r0C   [14]  828 	ld	iy, #_currentPage
   05FF FD BE 00      [19]  829 	cp	a, 0 (iy)
   0602 3E 00         [ 7]  830 	ld	a, #0x00
   0604 FD 9E 01      [19]  831 	sbc	a, 1 (iy)
   0607 E2r0Cr06      [10]  832 	jp	PO, 00214$
   060A EE 80         [ 7]  833 	xor	a, #0x80
   060C                     834 00214$:
   060C F2r2Br06      [10]  835 	jp	P, 00122$
                            836 ;src/menu.c:184: currentPage--; // Move to the previous page
   060F ED 43r00r0C   [20]  837 	ld	(_currentPage), bc
                            838 ;src/menu.c:185: currentIndex = (currentPage-1) * FILES_PER_PAGE; // Move to the first file of the page
   0613 ED 4Br00r0C   [20]  839 	ld	bc, (_currentPage)
   0617 0B            [ 6]  840 	dec	bc
   0618 69            [ 4]  841 	ld	l, c
   0619 60            [ 4]  842 	ld	h, b
   061A 29            [11]  843 	add	hl, hl
   061B 29            [11]  844 	add	hl, hl
   061C 29            [11]  845 	add	hl, hl
   061D 09            [11]  846 	add	hl, bc
   061E 29            [11]  847 	add	hl, hl
   061F 09            [11]  848 	add	hl, bc
   0620 22r04r0C      [16]  849 	ld	(_currentIndex), hl
                            850 ;src/menu.c:186: displayMenu(); // Display the menu
   0623 CDrA9r00      [17]  851 	call	_displayMenu
                            852 ;src/menu.c:188: break;
   0626 18 03         [12]  853 	jr	00122$
                            854 ;src/menu.c:190: case 104: // h - Help (lowercase h)
   0628                     855 00121$:
                            856 ;src/menu.c:192: helpMenu(); // Display the help menu
   0628 CDr93r02      [17]  857 	call	_helpMenu
                            858 ;src/menu.c:194: }
   062B                     859 00122$:
                            860 ;src/menu.c:195: Locate(0, (currentIndex%FILES_PER_PAGE) + 2); // Position the cursor on the selected file
   062B 21 13 00      [10]  861 	ld	hl, #0x0013
   062E E5            [11]  862 	push	hl
   062F 2Ar04r0C      [16]  863 	ld	hl, (_currentIndex)
   0632 E5            [11]  864 	push	hl
   0633 CDr00r00      [17]  865 	call	__modsint
   0636 F1            [10]  866 	pop	af
   0637 F1            [10]  867 	pop	af
   0638 7D            [ 4]  868 	ld	a, l
   0639 C6 02         [ 7]  869 	add	a, #0x02
   063B F5            [11]  870 	push	af
   063C 33            [ 6]  871 	inc	sp
   063D AF            [ 4]  872 	xor	a, a
   063E F5            [11]  873 	push	af
   063F 33            [ 6]  874 	inc	sp
   0640 CDr00r00      [17]  875 	call	_Locate
                            876 ;src/menu.c:196: printf(">"); // Print the cursor
   0643 21r68r06      [10]  877 	ld	hl, #___str_18
   0646 E3            [19]  878 	ex	(sp),hl
   0647 CDr00r00      [17]  879 	call	_printf
                            880 ;src/menu.c:197: Locate(0, (currentIndex%FILES_PER_PAGE) + 2); // Position the cursor on the selected file
   064A 21 13 00      [10]  881 	ld	hl, #0x0013
   064D E3            [19]  882 	ex	(sp),hl
   064E 2Ar04r0C      [16]  883 	ld	hl, (_currentIndex)
   0651 E5            [11]  884 	push	hl
   0652 CDr00r00      [17]  885 	call	__modsint
   0655 F1            [10]  886 	pop	af
   0656 F1            [10]  887 	pop	af
   0657 7D            [ 4]  888 	ld	a, l
   0658 C6 02         [ 7]  889 	add	a, #0x02
   065A F5            [11]  890 	push	af
   065B 33            [ 6]  891 	inc	sp
   065C AF            [ 4]  892 	xor	a, a
   065D F5            [11]  893 	push	af
   065E 33            [ 6]  894 	inc	sp
   065F CDr00r00      [17]  895 	call	_Locate
   0662 F1            [10]  896 	pop	af
                            897 ;src/menu.c:199: }
   0663 C3r96r04      [10]  898 	jp	00124$
   0666                     899 ___str_17:
   0666 20                  900 	.ascii " "
   0667 00                  901 	.db 0x00
   0668                     902 ___str_18:
   0668 3E                  903 	.ascii ">"
   0669 00                  904 	.db 0x00
                            905 ;src/menu.c:203: void main() {
                            906 ;	---------------------------------
                            907 ; Function main
                            908 ; ---------------------------------
   066A                     909 _main::
                            910 ;src/menu.c:205: currentPage = 1; // Start on page 1
   066A 21 01 00      [10]  911 	ld	hl, #0x0001
   066D 22r00r0C      [16]  912 	ld	(_currentPage), hl
                            913 ;src/menu.c:206: currentIndex = 0; // Start at the first file - index 0
   0670 2E 00         [ 7]  914 	ld	l, #0x00
   0672 22r04r0C      [16]  915 	ld	(_currentIndex), hl
                            916 ;src/menu.c:208: totalFiles = 22; // Total of files stored on the flash
   0675 2E 16         [ 7]  917 	ld	l, #0x16
   0677 22r06r0C      [16]  918 	ld	(_totalFiles), hl
                            919 ;src/menu.c:209: totalPages = (int)((totalFiles/FILES_PER_PAGE)+1); // Calculate the total pages based on the total files and files per page
   067A 2E 02         [ 7]  920 	ld	l, #0x02
   067C 22r02r0C      [16]  921 	ld	(_totalPages), hl
                            922 ;src/menu.c:219: game[0] =  "Metal Gear          ";    mapp[0] = 3; size[0] = 131072;
   067F 21r89r08      [10]  923 	ld	hl, #___str_19
   0682 22r00r00      [16]  924 	ld	(_game), hl
   0685 21 03 00      [10]  925 	ld	hl, #0x0003
   0688 22r00r02      [16]  926 	ld	(_mapp), hl
   068B 2E 00         [ 7]  927 	ld	l, #0x00
   068D 22r00r08      [16]  928 	ld	(_size), hl
   0690 21 02 00      [10]  929 	ld	hl, #0x0002
   0693 22r02r08      [16]  930 	ld	(_size+2), hl
                            931 ;src/menu.c:220: game[1] =  "Nemesis             ";    mapp[1] = 3; size[1] = 131072;
   0696 21r9Er08      [10]  932 	ld	hl, #___str_20
   0699 22r02r00      [16]  933 	ld	((_game + 0x0002)), hl
   069C 21 03 00      [10]  934 	ld	hl, #0x0003
   069F 22r02r02      [16]  935 	ld	((_mapp + 0x0002)), hl
   06A2 2E 00         [ 7]  936 	ld	l, #0x00
   06A4 22r04r08      [16]  937 	ld	((_size + 0x0004)), hl
   06A7 21 02 00      [10]  938 	ld	hl, #0x0002
   06AA 22r06r08      [16]  939 	ld	((_size + 0x0004)+2), hl
                            940 ;src/menu.c:221: game[2] =  "Contra              ";    mapp[2] = 3; size[2] = 131072;
   06AD 21rB3r08      [10]  941 	ld	hl, #___str_21
   06B0 22r04r00      [16]  942 	ld	((_game + 0x0004)), hl
   06B3 21 03 00      [10]  943 	ld	hl, #0x0003
   06B6 22r04r02      [16]  944 	ld	((_mapp + 0x0004)), hl
   06B9 2E 00         [ 7]  945 	ld	l, #0x00
   06BB 22r08r08      [16]  946 	ld	((_size + 0x0008)), hl
   06BE 21 02 00      [10]  947 	ld	hl, #0x0002
   06C1 22r0Ar08      [16]  948 	ld	((_size + 0x0008)+2), hl
                            949 ;src/menu.c:222: game[3] =  "Castlevania         ";    mapp[3] = 3; size[3] = 131072;
   06C4 21rC8r08      [10]  950 	ld	hl, #___str_22
   06C7 22r06r00      [16]  951 	ld	((_game + 0x0006)), hl
   06CA 21 03 00      [10]  952 	ld	hl, #0x0003
   06CD 22r06r02      [16]  953 	ld	((_mapp + 0x0006)), hl
   06D0 2E 00         [ 7]  954 	ld	l, #0x00
   06D2 22r0Cr08      [16]  955 	ld	((_size + 0x000c)), hl
   06D5 21 02 00      [10]  956 	ld	hl, #0x0002
   06D8 22r0Er08      [16]  957 	ld	((_size + 0x000c)+2), hl
                            958 ;src/menu.c:223: game[4] =  "Kings Valley II     ";    mapp[4] = 3; size[4] = 131072;
   06DB 21rDDr08      [10]  959 	ld	hl, #___str_23
   06DE 22r08r00      [16]  960 	ld	((_game + 0x0008)), hl
   06E1 21 03 00      [10]  961 	ld	hl, #0x0003
   06E4 22r08r02      [16]  962 	ld	((_mapp + 0x0008)), hl
   06E7 2E 00         [ 7]  963 	ld	l, #0x00
   06E9 22r10r08      [16]  964 	ld	((_size + 0x0010)), hl
   06EC 21 02 00      [10]  965 	ld	hl, #0x0002
   06EF 22r12r08      [16]  966 	ld	((_size + 0x0010)+2), hl
                            967 ;src/menu.c:224: game[5] =  "Vampire Killer      ";    mapp[5] = 3; size[5] = 131072;
   06F2 21rF2r08      [10]  968 	ld	hl, #___str_24
   06F5 22r0Ar00      [16]  969 	ld	((_game + 0x000a)), hl
   06F8 21 03 00      [10]  970 	ld	hl, #0x0003
   06FB 22r0Ar02      [16]  971 	ld	((_mapp + 0x000a)), hl
   06FE 2E 00         [ 7]  972 	ld	l, #0x00
   0700 22r14r08      [16]  973 	ld	((_size + 0x0014)), hl
   0703 21 02 00      [10]  974 	ld	hl, #0x0002
   0706 22r16r08      [16]  975 	ld	((_size + 0x0014)+2), hl
                            976 ;src/menu.c:225: game[6] =  "Snatcher            ";    mapp[6] = 3; size[6] = 131072;
   0709 21r07r09      [10]  977 	ld	hl, #___str_25
   070C 22r0Cr00      [16]  978 	ld	((_game + 0x000c)), hl
   070F 21 03 00      [10]  979 	ld	hl, #0x0003
   0712 22r0Cr02      [16]  980 	ld	((_mapp + 0x000c)), hl
   0715 2E 00         [ 7]  981 	ld	l, #0x00
   0717 22r18r08      [16]  982 	ld	((_size + 0x0018)), hl
   071A 21 02 00      [10]  983 	ld	hl, #0x0002
   071D 22r1Ar08      [16]  984 	ld	((_size + 0x0018)+2), hl
                            985 ;src/menu.c:226: game[7] =  "Galaga              ";    mapp[7] = 2; size[7] = 32768;
   0720 21r1Cr09      [10]  986 	ld	hl, #___str_26
   0723 22r0Er00      [16]  987 	ld	((_game + 0x000e)), hl
   0726 21 02 00      [10]  988 	ld	hl, #0x0002
   0729 22r0Er02      [16]  989 	ld	((_mapp + 0x000e)), hl
   072C 21 00 80      [10]  990 	ld	hl, #0x8000
   072F 22r1Cr08      [16]  991 	ld	((_size + 0x001c)), hl
   0732 21 00 00      [10]  992 	ld	hl, #0x0000
   0735 22r1Er08      [16]  993 	ld	((_size + 0x001c)+2), hl
                            994 ;src/menu.c:227: game[8] =  "Zaxxon              ";    mapp[8] = 2; size[8] = 32768;
   0738 21r31r09      [10]  995 	ld	hl, #___str_27
   073B 22r10r00      [16]  996 	ld	((_game + 0x0010)), hl
   073E 21 02 00      [10]  997 	ld	hl, #0x0002
   0741 22r10r02      [16]  998 	ld	((_mapp + 0x0010)), hl
   0744 21 00 80      [10]  999 	ld	hl, #0x8000
   0747 22r20r08      [16] 1000 	ld	((_size + 0x0020)), hl
   074A 21 00 00      [10] 1001 	ld	hl, #0x0000
   074D 22r22r08      [16] 1002 	ld	((_size + 0x0020)+2), hl
                           1003 ;src/menu.c:228: game[9] =  "Salamander          ";    mapp[9] = 3; size[9] = 131072;
   0750 21r46r09      [10] 1004 	ld	hl, #___str_28
   0753 22r12r00      [16] 1005 	ld	((_game + 0x0012)), hl
   0756 21 03 00      [10] 1006 	ld	hl, #0x0003
   0759 22r12r02      [16] 1007 	ld	((_mapp + 0x0012)), hl
   075C 2E 00         [ 7] 1008 	ld	l, #0x00
   075E 22r24r08      [16] 1009 	ld	((_size + 0x0024)), hl
   0761 21 02 00      [10] 1010 	ld	hl, #0x0002
   0764 22r26r08      [16] 1011 	ld	((_size + 0x0024)+2), hl
                           1012 ;src/menu.c:229: game[10] = "Parodius            ";    mapp[10] = 3; size[10] = 131072;
   0767 21r5Br09      [10] 1013 	ld	hl, #___str_29
   076A 22r14r00      [16] 1014 	ld	((_game + 0x0014)), hl
   076D 21 03 00      [10] 1015 	ld	hl, #0x0003
   0770 22r14r02      [16] 1016 	ld	((_mapp + 0x0014)), hl
   0773 2E 00         [ 7] 1017 	ld	l, #0x00
   0775 22r28r08      [16] 1018 	ld	((_size + 0x0028)), hl
   0778 21 02 00      [10] 1019 	ld	hl, #0x0002
   077B 22r2Ar08      [16] 1020 	ld	((_size + 0x0028)+2), hl
                           1021 ;src/menu.c:230: game[11] = "Knightmare          ";    mapp[11] = 2; size[11] = 32768;
   077E 21r70r09      [10] 1022 	ld	hl, #___str_30
   0781 22r16r00      [16] 1023 	ld	((_game + 0x0016)), hl
   0784 21 02 00      [10] 1024 	ld	hl, #0x0002
   0787 22r16r02      [16] 1025 	ld	((_mapp + 0x0016)), hl
   078A 21 00 80      [10] 1026 	ld	hl, #0x8000
   078D 22r2Cr08      [16] 1027 	ld	((_size + 0x002c)), hl
   0790 21 00 00      [10] 1028 	ld	hl, #0x0000
   0793 22r2Er08      [16] 1029 	ld	((_size + 0x002c)+2), hl
                           1030 ;src/menu.c:231: game[12] = "Pippols             ";    mapp[12] = 1; size[12] = 16384;
   0796 21r85r09      [10] 1031 	ld	hl, #___str_31
   0799 22r18r00      [16] 1032 	ld	((_game + 0x0018)), hl
   079C 21 01 00      [10] 1033 	ld	hl, #0x0001
   079F 22r18r02      [16] 1034 	ld	((_mapp + 0x0018)), hl
   07A2 21 00 40      [10] 1035 	ld	hl, #0x4000
   07A5 22r30r08      [16] 1036 	ld	((_size + 0x0030)), hl
   07A8 21 00 00      [10] 1037 	ld	hl, #0x0000
   07AB 22r32r08      [16] 1038 	ld	((_size + 0x0030)+2), hl
                           1039 ;src/menu.c:232: game[13] = "The Maze of Galious ";    mapp[13] = 3; size[13] = 131072;
   07AE 21r9Ar09      [10] 1040 	ld	hl, #___str_32
   07B1 22r1Ar00      [16] 1041 	ld	((_game + 0x001a)), hl
   07B4 21 03 00      [10] 1042 	ld	hl, #0x0003
   07B7 22r1Ar02      [16] 1043 	ld	((_mapp + 0x001a)), hl
   07BA 2E 00         [ 7] 1044 	ld	l, #0x00
   07BC 22r34r08      [16] 1045 	ld	((_size + 0x0034)), hl
   07BF 21 02 00      [10] 1046 	ld	hl, #0x0002
   07C2 22r36r08      [16] 1047 	ld	((_size + 0x0034)+2), hl
                           1048 ;src/menu.c:233: game[14] = "Penguin Adventure   ";    mapp[14] = 2; size[14] = 32768;
   07C5 21rAFr09      [10] 1049 	ld	hl, #___str_33
   07C8 22r1Cr00      [16] 1050 	ld	((_game + 0x001c)), hl
   07CB 21 02 00      [10] 1051 	ld	hl, #0x0002
   07CE 22r1Cr02      [16] 1052 	ld	((_mapp + 0x001c)), hl
   07D1 21 00 80      [10] 1053 	ld	hl, #0x8000
   07D4 22r38r08      [16] 1054 	ld	((_size + 0x0038)), hl
   07D7 21 00 00      [10] 1055 	ld	hl, #0x0000
   07DA 22r3Ar08      [16] 1056 	ld	((_size + 0x0038)+2), hl
                           1057 ;src/menu.c:234: game[15] = "Space Manbow        ";    mapp[15] = 3; size[15] = 131072;
   07DD 21rC4r09      [10] 1058 	ld	hl, #___str_34
   07E0 22r1Er00      [16] 1059 	ld	((_game + 0x001e)), hl
   07E3 21 03 00      [10] 1060 	ld	hl, #0x0003
   07E6 22r1Er02      [16] 1061 	ld	((_mapp + 0x001e)), hl
   07E9 2E 00         [ 7] 1062 	ld	l, #0x00
   07EB 22r3Cr08      [16] 1063 	ld	((_size + 0x003c)), hl
   07EE 21 02 00      [10] 1064 	ld	hl, #0x0002
   07F1 22r3Er08      [16] 1065 	ld	((_size + 0x003c)+2), hl
                           1066 ;src/menu.c:235: game[16] = "Gradius 2           ";    mapp[16] = 3; size[16] = 131072;
   07F4 21rD9r09      [10] 1067 	ld	hl, #___str_35
   07F7 22r20r00      [16] 1068 	ld	((_game + 0x0020)), hl
   07FA 21 03 00      [10] 1069 	ld	hl, #0x0003
   07FD 22r20r02      [16] 1070 	ld	((_mapp + 0x0020)), hl
   0800 2E 00         [ 7] 1071 	ld	l, #0x00
   0802 22r40r08      [16] 1072 	ld	((_size + 0x0040)), hl
   0805 21 02 00      [10] 1073 	ld	hl, #0x0002
   0808 22r42r08      [16] 1074 	ld	((_size + 0x0040)+2), hl
                           1075 ;src/menu.c:236: game[17] = "TwinBee             ";    mapp[17] = 1; size[17] = 16384;
   080B 21rEEr09      [10] 1076 	ld	hl, #___str_36
   080E 22r22r00      [16] 1077 	ld	((_game + 0x0022)), hl
   0811 21 01 00      [10] 1078 	ld	hl, #0x0001
   0814 22r22r02      [16] 1079 	ld	((_mapp + 0x0022)), hl
   0817 21 00 40      [10] 1080 	ld	hl, #0x4000
   081A 22r44r08      [16] 1081 	ld	((_size + 0x0044)), hl
   081D 21 00 00      [10] 1082 	ld	hl, #0x0000
   0820 22r46r08      [16] 1083 	ld	((_size + 0x0044)+2), hl
                           1084 ;src/menu.c:237: game[18] = "Zanac               ";    mapp[18] = 2; size[18] = 32768;
   0823 21r03r0A      [10] 1085 	ld	hl, #___str_37
   0826 22r24r00      [16] 1086 	ld	((_game + 0x0024)), hl
   0829 21 02 00      [10] 1087 	ld	hl, #0x0002
   082C 22r24r02      [16] 1088 	ld	((_mapp + 0x0024)), hl
   082F 21 00 80      [10] 1089 	ld	hl, #0x8000
   0832 22r48r08      [16] 1090 	ld	((_size + 0x0048)), hl
   0835 21 00 00      [10] 1091 	ld	hl, #0x0000
   0838 22r4Ar08      [16] 1092 	ld	((_size + 0x0048)+2), hl
                           1093 ;src/menu.c:238: game[19] = "H.E.R.O.            ";    mapp[19] = 1; size[19] = 16384;
   083B 21r18r0A      [10] 1094 	ld	hl, #___str_38
   083E 22r26r00      [16] 1095 	ld	((_game + 0x0026)), hl
   0841 21 01 00      [10] 1096 	ld	hl, #0x0001
   0844 22r26r02      [16] 1097 	ld	((_mapp + 0x0026)), hl
   0847 21 00 40      [10] 1098 	ld	hl, #0x4000
   084A 22r4Cr08      [16] 1099 	ld	((_size + 0x004c)), hl
   084D 21 00 00      [10] 1100 	ld	hl, #0x0000
   0850 22r4Er08      [16] 1101 	ld	((_size + 0x004c)+2), hl
                           1102 ;src/menu.c:239: game[20] = "Yie Ar Kung-Fu      ";    mapp[20] = 2; size[20] = 32768;
   0853 21r2Dr0A      [10] 1103 	ld	hl, #___str_39
   0856 22r28r00      [16] 1104 	ld	((_game + 0x0028)), hl
   0859 21 02 00      [10] 1105 	ld	hl, #0x0002
   085C 22r28r02      [16] 1106 	ld	((_mapp + 0x0028)), hl
   085F 21 00 80      [10] 1107 	ld	hl, #0x8000
   0862 22r50r08      [16] 1108 	ld	((_size + 0x0050)), hl
   0865 21 00 00      [10] 1109 	ld	hl, #0x0000
   0868 22r52r08      [16] 1110 	ld	((_size + 0x0050)+2), hl
                           1111 ;src/menu.c:240: game[21] = "XRacing             ";    mapp[21] = 4; size[21] = 49152;
   086B 21r42r0A      [10] 1112 	ld	hl, #___str_40
   086E 22r2Ar00      [16] 1113 	ld	((_game + 0x002a)), hl
   0871 21 04 00      [10] 1114 	ld	hl, #0x0004
   0874 22r2Ar02      [16] 1115 	ld	((_mapp + 0x002a)), hl
   0877 21 00 C0      [10] 1116 	ld	hl, #0xc000
   087A 22r54r08      [16] 1117 	ld	((_size + 0x0054)), hl
   087D 21 00 00      [10] 1118 	ld	hl, #0x0000
   0880 22r56r08      [16] 1119 	ld	((_size + 0x0054)+2), hl
                           1120 ;src/menu.c:243: displayMenu();
   0883 CDrA9r00      [17] 1121 	call	_displayMenu
                           1122 ;src/menu.c:245: navigateMenu();
                           1123 ;src/menu.c:246: }
   0886 C3r8Cr04      [10] 1124 	jp  _navigateMenu
   0889                    1125 ___str_19:
   0889 4D 65 74 61 6C 20  1126 	.ascii "Metal Gear          "
        47 65 61 72 20 20
        20 20 20 20 20 20
        20 20
   089D 00                 1127 	.db 0x00
   089E                    1128 ___str_20:
   089E 4E 65 6D 65 73 69  1129 	.ascii "Nemesis             "
        73 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   08B2 00                 1130 	.db 0x00
   08B3                    1131 ___str_21:
   08B3 43 6F 6E 74 72 61  1132 	.ascii "Contra              "
        20 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   08C7 00                 1133 	.db 0x00
   08C8                    1134 ___str_22:
   08C8 43 61 73 74 6C 65  1135 	.ascii "Castlevania         "
        76 61 6E 69 61 20
        20 20 20 20 20 20
        20 20
   08DC 00                 1136 	.db 0x00
   08DD                    1137 ___str_23:
   08DD 4B 69 6E 67 73 20  1138 	.ascii "Kings Valley II     "
        56 61 6C 6C 65 79
        20 49 49 20 20 20
        20 20
   08F1 00                 1139 	.db 0x00
   08F2                    1140 ___str_24:
   08F2 56 61 6D 70 69 72  1141 	.ascii "Vampire Killer      "
        65 20 4B 69 6C 6C
        65 72 20 20 20 20
        20 20
   0906 00                 1142 	.db 0x00
   0907                    1143 ___str_25:
   0907 53 6E 61 74 63 68  1144 	.ascii "Snatcher            "
        65 72 20 20 20 20
        20 20 20 20 20 20
        20 20
   091B 00                 1145 	.db 0x00
   091C                    1146 ___str_26:
   091C 47 61 6C 61 67 61  1147 	.ascii "Galaga              "
        20 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   0930 00                 1148 	.db 0x00
   0931                    1149 ___str_27:
   0931 5A 61 78 78 6F 6E  1150 	.ascii "Zaxxon              "
        20 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   0945 00                 1151 	.db 0x00
   0946                    1152 ___str_28:
   0946 53 61 6C 61 6D 61  1153 	.ascii "Salamander          "
        6E 64 65 72 20 20
        20 20 20 20 20 20
        20 20
   095A 00                 1154 	.db 0x00
   095B                    1155 ___str_29:
   095B 50 61 72 6F 64 69  1156 	.ascii "Parodius            "
        75 73 20 20 20 20
        20 20 20 20 20 20
        20 20
   096F 00                 1157 	.db 0x00
   0970                    1158 ___str_30:
   0970 4B 6E 69 67 68 74  1159 	.ascii "Knightmare          "
        6D 61 72 65 20 20
        20 20 20 20 20 20
        20 20
   0984 00                 1160 	.db 0x00
   0985                    1161 ___str_31:
   0985 50 69 70 70 6F 6C  1162 	.ascii "Pippols             "
        73 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   0999 00                 1163 	.db 0x00
   099A                    1164 ___str_32:
   099A 54 68 65 20 4D 61  1165 	.ascii "The Maze of Galious "
        7A 65 20 6F 66 20
        47 61 6C 69 6F 75
        73 20
   09AE 00                 1166 	.db 0x00
   09AF                    1167 ___str_33:
   09AF 50 65 6E 67 75 69  1168 	.ascii "Penguin Adventure   "
        6E 20 41 64 76 65
        6E 74 75 72 65 20
        20 20
   09C3 00                 1169 	.db 0x00
   09C4                    1170 ___str_34:
   09C4 53 70 61 63 65 20  1171 	.ascii "Space Manbow        "
        4D 61 6E 62 6F 77
        20 20 20 20 20 20
        20 20
   09D8 00                 1172 	.db 0x00
   09D9                    1173 ___str_35:
   09D9 47 72 61 64 69 75  1174 	.ascii "Gradius 2           "
        73 20 32 20 20 20
        20 20 20 20 20 20
        20 20
   09ED 00                 1175 	.db 0x00
   09EE                    1176 ___str_36:
   09EE 54 77 69 6E 42 65  1177 	.ascii "TwinBee             "
        65 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   0A02 00                 1178 	.db 0x00
   0A03                    1179 ___str_37:
   0A03 5A 61 6E 61 63 20  1180 	.ascii "Zanac               "
        20 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   0A17 00                 1181 	.db 0x00
   0A18                    1182 ___str_38:
   0A18 48 2E 45 2E 52 2E  1183 	.ascii "H.E.R.O.            "
        4F 2E 20 20 20 20
        20 20 20 20 20 20
        20 20
   0A2C 00                 1184 	.db 0x00
   0A2D                    1185 ___str_39:
   0A2D 59 69 65 20 41 72  1186 	.ascii "Yie Ar Kung-Fu      "
        20 4B 75 6E 67 2D
        46 75 20 20 20 20
        20 20
   0A41 00                 1187 	.db 0x00
   0A42                    1188 ___str_40:
   0A42 58 52 61 63 69 6E  1189 	.ascii "XRacing             "
        67 20 20 20 20 20
        20 20 20 20 20 20
        20 20
   0A56 00                 1190 	.db 0x00
                           1191 	.area _CODE
                           1192 	.area _INITIALIZER
                           1193 	.area _CABS (ABS)
